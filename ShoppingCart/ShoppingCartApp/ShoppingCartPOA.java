package ShoppingCartApp;


/**
* ShoppingCartApp/ShoppingCartPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ShoppingCart.idl
* Donnerstag, 28. April 2016 18:30 Uhr MESZ
*/

public abstract class ShoppingCartPOA extends org.omg.PortableServer.Servant
 implements ShoppingCartApp.ShoppingCartOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getShoppingCartContents", new java.lang.Integer (0));
    _methods.put ("addToShoppingCart", new java.lang.Integer (1));
    _methods.put ("updateAmount", new java.lang.Integer (2));
    _methods.put ("clearShoppingCart", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ShoppingCartApp/ShoppingCart/getShoppingCartContents
       {
         ShoppingCartApp.cartContentsHolder contents = new ShoppingCartApp.cartContentsHolder ();
         this.getShoppingCartContents (contents);
         out = $rh.createReply();
         ShoppingCartApp.cartContentsHelper.write (out, contents.value);
         break;
       }

       case 1:  // ShoppingCartApp/ShoppingCart/addToShoppingCart
       {
         String productId = in.read_string ();
         int amount = in.read_long ();
         this.addToShoppingCart (productId, amount);
         out = $rh.createReply();
         break;
       }

       case 2:  // ShoppingCartApp/ShoppingCart/updateAmount
       {
         String productId = in.read_string ();
         int new_amount = in.read_long ();
         this.updateAmount (productId, new_amount);
         out = $rh.createReply();
         break;
       }

       case 3:  // ShoppingCartApp/ShoppingCart/clearShoppingCart
       {
         this.clearShoppingCart ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ShoppingCartApp/ShoppingCart:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ShoppingCart _this() 
  {
    return ShoppingCartHelper.narrow(
    super._this_object());
  }

  public ShoppingCart _this(org.omg.CORBA.ORB orb) 
  {
    return ShoppingCartHelper.narrow(
    super._this_object(orb));
  }


} // class ShoppingCartPOA
